<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziyun.basic.mapper.OwnSchoolOrgMapper">
    <resultMap id="BaseResultMap" type="com.ziyun.basic.entity.OwnSchoolOrg">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="school_code" property="schoolCode" jdbcType="VARCHAR"/>
        <result column="school_name" property="schoolName" jdbcType="VARCHAR"/>
        <result column="faculty_code" property="facultyCode" jdbcType="VARCHAR"/>
        <result column="faculty_name" property="facultyName" jdbcType="VARCHAR"/>
        <result column="major_code" property="majorCode" jdbcType="VARCHAR"/>
        <result column="major_name" property="majorName" jdbcType="VARCHAR"/>
        <result column="class_code" property="classCode" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, school_code, school_name, faculty_code, faculty_name, major_code, major_name,
        class_code
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from own_school_org
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from own_school_org
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ziyun.basic.entity.OwnSchoolOrg">
        insert into own_school_org (id, school_code, school_name,
        faculty_code, faculty_name, major_code,
        major_name, class_code)
        values (#{id,jdbcType=INTEGER}, #{schoolCode,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR},
        #{facultyCode,jdbcType=VARCHAR}, #{facultyName,jdbcType=VARCHAR}, #{majorCode,jdbcType=VARCHAR},
        #{majorName,jdbcType=VARCHAR}, #{classCode,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ziyun.basic.entity.OwnSchoolOrg">
        insert into own_school_org
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="schoolCode != null">
                school_code,
            </if>
            <if test="schoolName != null">
                school_name,
            </if>
            <if test="facultyCode != null">
                faculty_code,
            </if>
            <if test="facultyName != null">
                faculty_name,
            </if>
            <if test="majorCode != null">
                major_code,
            </if>
            <if test="majorName != null">
                major_name,
            </if>
            <if test="classCode != null">
                class_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="schoolCode != null">
                #{schoolCode,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="facultyCode != null">
                #{facultyCode,jdbcType=VARCHAR},
            </if>
            <if test="facultyName != null">
                #{facultyName,jdbcType=VARCHAR},
            </if>
            <if test="majorCode != null">
                #{majorCode,jdbcType=VARCHAR},
            </if>
            <if test="majorName != null">
                #{majorName,jdbcType=VARCHAR},
            </if>
            <if test="classCode != null">
                #{classCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ziyun.basic.entity.OwnSchoolOrg">
        update own_school_org
        <set>
            <if test="schoolCode != null">
                school_code = #{schoolCode,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="facultyCode != null">
                faculty_code = #{facultyCode,jdbcType=VARCHAR},
            </if>
            <if test="facultyName != null">
                faculty_name = #{facultyName,jdbcType=VARCHAR},
            </if>
            <if test="majorCode != null">
                major_code = #{majorCode,jdbcType=VARCHAR},
            </if>
            <if test="majorName != null">
                major_name = #{majorName,jdbcType=VARCHAR},
            </if>
            <if test="classCode != null">
                class_code = #{classCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ziyun.basic.entity.OwnSchoolOrg">
        update own_school_org
        set school_code = #{schoolCode,jdbcType=VARCHAR},
        school_name = #{schoolName,jdbcType=VARCHAR},
        faculty_code = #{facultyCode,jdbcType=VARCHAR},
        faculty_name = #{facultyName,jdbcType=VARCHAR},
        major_code = #{majorCode,jdbcType=VARCHAR},
        major_name = #{majorName,jdbcType=VARCHAR},
        class_code = #{classCode,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 查询全部 -->
    <select id="list" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from own_school_org
    </select>


    <!-- 根据条件：查询,获取班级的全部信息 -->
    <select id="selectBy" resultMap="BaseResultMap" parameterType="com.ziyun.basic.vo.Params">
        select
        <include refid="Base_Column_List"/>
        from own_school_org t
        where 1=1
        <!-- 校区code：：'学籍类型 slg 苏理工 jkd 江科大 -->
        <if test="schoolCode != null">
            and t.school_Code = #{schoolCode,jdbcType=VARCHAR}
        </if>
        <!-- 院系code：：自己编码的，不是学校的编码 -->
        <if test="facultyCode != null">
            and t.faculty_code = #{facultyCode,jdbcType=VARCHAR}
        </if>
        <!-- 专业code：：自己编码的，不是学校的编码 -->
        <if test="majorCode != null">
            and t.major_code = #{majorCode,jdbcType=VARCHAR}
        </if>
        <!-- 班级code：：班级只有code,没有名称 -->
        <!-- <if test="classCode != null"> and t.class_code = #{classCode,jdbcType=VARCHAR}
            </if> -->
        <!-- 多个班级放到：in中 -->
        <if test="classCode != null and classCode.length > 0">
            and t.class_code in
            <foreach collection="classCode" item="item" index="index"
                     open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY t.school_code,t.faculty_code,t.major_code,t.class_code DESC
    </select>

    <!-- 根据条件：查询,获取班级的全部信息 -->
    <select id="selectAllClasscode" resultType="java.lang.String" parameterType="com.ziyun.basic.vo.Params">
        select
        t.class_code
        from own_school_org t
        where 1=1
        <!-- 校区code：：'学籍类型 slg 苏理工 jkd 江科大 -->
        <if test="schoolCode != null">
            and t.school_Code = #{schoolCode,jdbcType=VARCHAR}
        </if>
        <!-- 院系code：：自己编码的，不是学校的编码 -->
        <if test="facultyCode != null">
            and t.faculty_code = #{facultyCode,jdbcType=VARCHAR}
        </if>
        <!-- 专业code：：自己编码的，不是学校的编码 -->
        <if test="majorCode != null">
            and t.major_code = #{majorCode,jdbcType=VARCHAR}
        </if>
        <!-- 班级code：：班级只有code,没有名称 -->
        <!-- <if test="classCode != null"> and t.class_code = #{classCode,jdbcType=VARCHAR}
            </if> -->
        <!-- 多个班级放到：in中 -->
        <if test="classCode != null and classCode.length > 1">
            and t.class_code in
            <foreach collection="classCode" item="item" index="index"
                     open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>

        <!-- 上面和下面这样写的原因是 应对学校那边 的 17届需求-->
        <if test="classCode !=null and classCode.length == 1 ">
            AND t.class_code LIKE
            <foreach collection="classCode" item="item" index="index"
                     open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

</mapper>
