spring:
  profiles:
    active: dev # 环境切换
  application:
    name: borrow-service
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

mybatis:
  ## 实体类路径
  typeAliasesPackage: com.ziyun.borrow.model
  ## mapping文件路径
  mapperLocations: classpath:mapping/*.xml
  ## 配置文件路径
  configLocation: classpath:mybatis-config.xml

logging:
  config: classpath:log4j2.yml

# Excel导出配置
excel:
  xlsLocation: xls/
  record:
    limit: 1000
  borrow:
    types:
      name: 借阅类型
      fileName: borrow_types.xls
    bookdetail:
      name: 借阅图书排名
      fileName: book_detail.xls
    peopledetail:
      name: 借阅数量排名
      fileName: people_detail.xls
    variationtrend:
      name: 借阅数量趋势
      fileName: variation_trend.xls
    frequency:
      name: 借阅频次
      fileName: borrow_frequency.xls
    people:
      name: 借阅人群
      fileName: borrow_people.xls
---

# 测试环境
server:
  port: 7014
  max-http-header-size: 40960
spring:
  profiles: test
  datasource:
    name: test
    url: jdbc:mysql://192.168.101.218:3306/datacenter_v2?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8
    username: app
    password: ZFRwjk2RPNxD346z
    driver-class-name: com.mysql.jdbc.Driver
    testOnBorrow: true
    validationQuery: select 1
  redis:
    ## Redis数据库索引（默认为0）
    database: 1
    ## 主机
    host: 192.168.101.212
    ## 端口
    port: 6379
    ## Redis服务器连接密码（默认为空）
    password: NaRT9gnxMKZ6MqA2
    ## 连接超时时间（秒）
    timeout: 43200
    pool:
      ## 连接池最大连接数（使用负值表示没有限制）
      max-active: 600
      ## 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: 1000
      ## 连接池中的最大空闲连接
      max-idle: 300
      ## 连接池中的最小空闲连接
      min-idle: 200
# eureka server
eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.101.211:8606/eureka/
  instance:
    ## 租期更新时间间隔（默认30秒）
    leaseRenewalIntervalInSeconds: 15
    ## 租期到期时间（默认90秒）
    leaseExpirationDurationInSeconds: 30
ribbon:
  eureka:
    enabled: true
# swagger 配置
swagger:
 show: true
---

# 开发环境
server:
  port: 7014
  max-http-header-size: 40960
spring:
  profiles: dev
  datasource:
    name: test
    url: jdbc:mysql://192.168.101.217:3306/datacenter_dev_v2?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8
    username: dev
    password: lJZx2Ik5eqX3xBDp
    driver-class-name: com.mysql.jdbc.Driver
    testOnBorrow: true
    validationQuery: select 1
  redis:
    ## Redis数据库索引（默认为0）
    database: 0
    ## 主机
    host: 192.168.101.212
    ## 端口
    port: 6379
    ## Redis服务器连接密码（默认为空）
    password: NaRT9gnxMKZ6MqA2
    ## 连接超时时间（秒）
    timeout: 43200
    pool:
      ## 连接池最大连接数（使用负值表示没有限制）
      max-active: 600
      ## 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: 1000
      ## 连接池中的最大空闲连接
      max-idle: 300
      ## 连接池中的最小空闲连接
      min-idle: 200
# eureka server
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8606/eureka/
  instance:
    ## 租期更新时间间隔（默认30秒）
    leaseRenewalIntervalInSeconds: 15
    ## 租期到期时间（默认90秒）
    leaseExpirationDurationInSeconds: 30
ribbon:
  eureka:
    enabled: true
# swagger 配置
swagger:
 show: true
---

# 生产环境
server:
  port: 7014
  max-http-header-size: 40960
spring:
  profiles: prod
  datasource:
    name: test
    url: jdbc:mysql://10.130.254.28:3306/datacenter?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8
    username: root
    password: dd@2018
    driver-class-name: com.mysql.jdbc.Driver
    testOnBorrow: true
    validationQuery: select 1
  redis:
    ## Redis数据库索引（默认为0）
    database: 0
    ## 主机
    host: 10.130.254.28
    ## 端口
    port: 6379
    ## Redis服务器连接密码（默认为空）
    password:
    ## 连接超时时间（秒）
    timeout: 43200
    pool:
      ## 连接池最大连接数（使用负值表示没有限制）
      max-active: 600
      ## 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: 1000
      ## 连接池中的最大空闲连接
      max-idle: 300
      ## 连接池中的最小空闲连接
      min-idle: 200
# eureka server
## eureka server
eureka:
  client:
    serviceUrl:
      defaultZone: http://10.130.254.28:8606/eureka/
  instance:
    ## 租期更新时间间隔（默认30秒）
    leaseRenewalIntervalInSeconds: 15
    ## 租期到期时间（默认90秒）
    leaseExpirationDurationInSeconds: 30
ribbon:
  eureka:
    enabled: true
# swagger 配置
swagger:
 show: false
